[{"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\index.tsx":"1","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\form\\CircleBtn.tsx":"2","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\form\\Toast.tsx":"3","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\Studio.tsx":"4","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\SubtitleTimeLine.tsx":"5","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\form\\FileInput.tsx":"6","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\states.ts":"7","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\caption.ts":"8","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\storage.ts":"9","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\index.ts":"10","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\CaptionEditor.tsx":"11","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\Help.tsx":"12","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\App.tsx":"13","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\consts.ts":"14","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\timestamp.ts":"15","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\CaptionView.tsx":"16","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\funcs.ts":"17","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\TimeControll.tsx":"18","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\index.ts":"19","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\VideoPlayer.tsx":"20","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\Intro.tsx":"21","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\SimpleTimeline.tsx":"22"},{"size":205,"mtime":1680887996357,"results":"23","hashOfConfig":"24"},{"size":791,"mtime":1680887996341,"results":"25","hashOfConfig":"24"},{"size":1982,"mtime":1680899889808,"results":"26","hashOfConfig":"24"},{"size":13411,"mtime":1681145755205,"results":"27","hashOfConfig":"24"},{"size":11545,"mtime":1681145821620,"results":"28","hashOfConfig":"24"},{"size":1318,"mtime":1681127017149,"results":"29","hashOfConfig":"24"},{"size":208,"mtime":1680887996357,"results":"30","hashOfConfig":"24"},{"size":1121,"mtime":1680895469694,"results":"31","hashOfConfig":"24"},{"size":250,"mtime":1680887996357,"results":"32","hashOfConfig":"24"},{"size":378,"mtime":1680887996357,"results":"33","hashOfConfig":"24"},{"size":6025,"mtime":1681052024703,"results":"34","hashOfConfig":"24"},{"size":4604,"mtime":1681052024708,"results":"35","hashOfConfig":"24"},{"size":574,"mtime":1681124229185,"results":"36","hashOfConfig":"24"},{"size":404,"mtime":1681052024710,"results":"37","hashOfConfig":"24"},{"size":1541,"mtime":1680887996357,"results":"38","hashOfConfig":"24"},{"size":834,"mtime":1680887996341,"results":"39","hashOfConfig":"24"},{"size":60,"mtime":1680887996357,"results":"40","hashOfConfig":"24"},{"size":3529,"mtime":1680887996341,"results":"41","hashOfConfig":"24"},{"size":119,"mtime":1680887996357,"results":"42","hashOfConfig":"24"},{"size":4192,"mtime":1680887996357,"results":"43","hashOfConfig":"24"},{"size":3790,"mtime":1681127904540,"results":"44","hashOfConfig":"24"},{"size":1775,"mtime":1680887996341,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"p6xc84",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\index.tsx",[],["98","99"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\form\\CircleBtn.tsx",[],["100","101"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\form\\Toast.tsx",[],["102","103"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\Studio.tsx",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\SubtitleTimeLine.tsx",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\form\\FileInput.tsx",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\states.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\caption.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\storage.ts",[],["104","105"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\index.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\CaptionEditor.tsx",["106","107"],"import React, { ChangeEvent } from 'react'\r\nimport hotkeys from 'hotkeys-js'\r\n\r\nimport { TimeControll } from \".\"\r\nimport { CircleBtn } from \"../form\"\r\nimport { Caption, areSameCaptions } from \"../../utils/caption\"\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\nimport { SHOOT_SUBTITLE_TIME_MAJOR } from \"../../utils/consts\"\r\n\r\nimport './caption-editor.sass'\r\n\r\n\r\nexport default class CaptionEditor extends React.Component<{\r\n  currentTime: number // for stick time button\r\n  totalTime: number // video duration\r\n\r\n  caption: Caption | null\r\n  captionIndex: number\r\n  onCaptionChanged: (index: number, cNew: Caption) => void\r\n}, {\r\n  lastCaption: Caption | null, // a copy of props.caption to edit\r\n  newCaption: Caption | null,\r\n\r\n  is_ltr: boolean\r\n}>\r\n{\r\n  inputRef: React.RefObject<HTMLInputElement>\r\n\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      lastCaption: null,\r\n      newCaption: null,\r\n\r\n      is_ltr: true\r\n    }\r\n    this.inputRef = React.createRef()\r\n\r\n    // --- binding methods ---\r\n    this.onCaptionContentChanged = this.onCaptionContentChanged.bind(this)\r\n    this.onCaptionTimeRangeChanged = this.onCaptionTimeRangeChanged.bind(this)\r\n    this.handleCaptionChange = this.handleCaptionChange.bind(this)\r\n    this.isCapInTimeRange = this.isCapInTimeRange.bind(this)\r\n  }\r\n\r\n  // ------------------- component API -------------------------\r\n\r\n  componentDidMount() {\r\n    hotkeys('alt+left', () => {\r\n      this.onCaptionTimeRangeChanged(-SHOOT_SUBTITLE_TIME_MAJOR, 0)\r\n    })\r\n\r\n    hotkeys('ctrl+8', kv => {\r\n      kv.preventDefault()\r\n      this.onCaptionTimeRangeChanged(null, 0)\r\n    })\r\n    hotkeys('ctrl+9', kv => {\r\n      kv.preventDefault()\r\n      this.onCaptionTimeRangeChanged(0, null)\r\n    })\r\n\r\n    hotkeys('ctrl+0', kv => {\r\n      kv.preventDefault()\r\n      this.setState({ is_ltr: !this.state.is_ltr })\r\n    })\r\n    \r\n    hotkeys('enter', kv => {\r\n      this.onCaptionContentChanged(kv)\r\n      this.handleCaptionChange()\r\n    })\r\n\r\n    hotkeys('alt+right', () => {\r\n      this.onCaptionTimeRangeChanged(+SHOOT_SUBTITLE_TIME_MAJOR, 0)\r\n    })\r\n    hotkeys('tab+left', kv => {\r\n      kv.preventDefault()\r\n      this.onCaptionTimeRangeChanged(0, -SHOOT_SUBTITLE_TIME_MAJOR)\r\n    })\r\n    hotkeys('tab+right', kv => {\r\n      kv.preventDefault()\r\n      this.onCaptionTimeRangeChanged(0, +SHOOT_SUBTITLE_TIME_MAJOR)\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      (!this.props.caption && this.state.lastCaption) ||\r\n      (this.props.caption && (this.props.caption.hash !== this.state.lastCaption?.hash))\r\n    ) {\r\n      this.handleCaptionChange() // onblur is not triggered when you blur it by code, so this line solves the problem\r\n\r\n      const newPropCap = this.props.caption === null ? null : { ...this.props.caption }\r\n      this.setState({\r\n        lastCaption: newPropCap ? { ...newPropCap } : null,\r\n        newCaption: newPropCap ? { ...newPropCap } : null\r\n      })\r\n    }\r\n  }\r\n\r\n  // ------------------- functionalities -------------------------\r\n\r\n  isCapInTimeRange(time: number): boolean {\r\n    return time >= 0 && time <= this.props.totalTime\r\n  }\r\n\r\n  onCaptionContentChanged(e: any) {\r\n    const newCap = this.state.newCaption\r\n    if (newCap !== null)\r\n      this.setState({\r\n        newCaption: { ...newCap, content: this.inputRef.current?.value || \"\" }\r\n      })\r\n  }\r\n  onCaptionTimeRangeChanged(startChange: number | null = 0, endChange: number | null = 0) { // null is the value for stick time button\r\n    const cap = this.state.newCaption\r\n    if (cap === null) return\r\n\r\n    // controll the caption start/end time \r\n    if (startChange === null)\r\n      cap.start = this.props.currentTime + 0.001\r\n    else if (this.isCapInTimeRange(cap.start + startChange))\r\n      cap.start += startChange\r\n\r\n    if (endChange === null)\r\n      cap.end = this.props.currentTime\r\n    else if (this.isCapInTimeRange(cap.end + endChange))\r\n      cap.end += endChange\r\n\r\n    // sync end & start\r\n    if (cap.start > cap.end) {\r\n      if (endChange === 0)\r\n        cap.end = cap.start\r\n      else\r\n        cap.start = cap.end\r\n    }\r\n\r\n    this.setState(\r\n      { newCaption: cap },\r\n      this.handleCaptionChange)\r\n\r\n  }\r\n\r\n  handleCaptionChange() {\r\n    if (this.state.lastCaption === null || this.state.newCaption === null) return\r\n\r\n    if (!areSameCaptions(this.state.lastCaption, this.state.newCaption)) {\r\n      const\r\n        lastCaption = this.state.lastCaption,\r\n        newCap = { ...this.state.newCaption, hash: uuid() }\r\n\r\n      this.setState({\r\n        lastCaption: { ...newCap },\r\n        newCaption: { ...newCap }\r\n      }, () => this.props.onCaptionChanged(this.props.captionIndex, newCap))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const cap = this.props.caption // myabe it's not available [for eg it can be removed]\r\n    if (cap)\r\n      this.inputRef.current?.focus()\r\n    else\r\n      this.inputRef.current?.blur()\r\n\r\n    return (\r\n      <div className=\"caption-editor-wrapper\">\r\n        {cap ?\r\n          <TimeControll\r\n            time={cap.start}\r\n            onChange={changeValue => { this.onCaptionTimeRangeChanged(changeValue, 0) }}\r\n          /> :\r\n          <TimeControll time={0} />\r\n        }\r\n\r\n        <div>\r\n          <CircleBtn\r\n            disabled={cap === null}\r\n            onClick={() => this.setState(ls => ({ is_ltr: !ls.is_ltr }))}\r\n            iconClassName={\"fas fa-align-\" + (this.state.is_ltr ? \"left\" : \"right\")}\r\n          />\r\n          <input type=\"text\" ref={this.inputRef} disabled={cap === null}\r\n            className={\"form-control caption-editor \" + (this.state.is_ltr ? \"ltr\" : \"rtl\")}\r\n            value={this.state.newCaption?.content || \"\"}\r\n            onChange={this.onCaptionContentChanged}\r\n            onBlur={this.handleCaptionChange} />\r\n        </div>\r\n\r\n        {cap ?\r\n          <TimeControll\r\n            time={cap.end}\r\n            onChange={changeValue => { this.onCaptionTimeRangeChanged(0, changeValue) }}\r\n          /> :\r\n          <TimeControll time={0} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\Help.tsx",[],["108","109"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\App.tsx",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\consts.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\timestamp.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\CaptionView.tsx",[],["110","111"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\utils\\funcs.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\TimeControll.tsx",[],["112","113"],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\index.ts",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\VideoPlayer.tsx",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\pages\\Intro.tsx",[],"C:\\Users\\HamidB80\\Documents\\programming\\subtitle-editor\\src\\components\\video\\SimpleTimeline.tsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"114","replacedBy":"120"},{"ruleId":"116","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":28},{"ruleId":"124","severity":1,"message":"128","line":149,"column":9,"nodeType":"126","messageId":"127","endLine":149,"endColumn":20},{"ruleId":"114","replacedBy":"129"},{"ruleId":"116","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"116","replacedBy":"132"},{"ruleId":"114","replacedBy":"133"},{"ruleId":"116","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],["135"],["136"],["135"],["136"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'lastCaption' is assigned a value but never used.",["135"],["136"],["135"],["136"],["135"],["136"],"no-global-assign","no-unsafe-negation"]